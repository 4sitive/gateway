<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <property name="LOG_FILE" value="${LOG_FILE:-${LOG_PATH:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}}/spring}"/>

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>${CONSOLE_LOG_CHARSET}</charset>
        </encoder>
    </appender>

    <appender name="CONSOLE_JSON" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp>
                    <fieldName>timestamp</fieldName>
                </timestamp>
                <logLevel/>
                <threadName/>
                <loggerName/>
                <throwableClassName>
                    <useSimpleClassName>false</useSimpleClassName>
                </throwableClassName>
                <throwableRootCauseClassName>
                    <useSimpleClassName>false</useSimpleClassName>
                </throwableRootCauseClassName>
                <message/>
                <callerData/>
                <arguments/>
                <stackTrace>
                    <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                        <maxDepthPerThrowable>30</maxDepthPerThrowable>
                        <maxLength>1024</maxLength>
                        <shortenedClassNameLength>20</shortenedClassNameLength>
                        <exclude>sun\.reflect\..*\.invoke.*</exclude>
                        <exclude>net\.sf\.cglib\.proxy\.MethodProxy\.invoke</exclude>
                        <rootCauseFirst>true</rootCauseFirst>
                        <inlineHash>true</inlineHash>
                    </throwableConverter>
                </stackTrace>
                <pattern>
                    <omitEmptyFields>true</omitEmptyFields>
                    <pattern>
                        {
                        "type":"service",
                        "pid":"#asLong{${PID}}",
                        "hostname":"${HOSTNAME}",
                        "requested_uri":"%mdc{req.requestURI}",
                        "query_string":"%mdc{req.queryString}",
                        "traceId":"%mdc{traceId}",
                        "spanId":"%mdc{spanId}",
                        "parentId":"%mdc{parentId}",
                        "method":"%mdc{req.method}"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
    </appender>

    <springProfile name="LOGGING_FILE_JSON">
        <appender name="FILE_JSON" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
                <providers>
                    <timestamp>
                        <fieldName>timestamp</fieldName>
                    </timestamp>
                    <logLevel/>
                    <threadName/>
                    <loggerName/>
                    <throwableClassName>
                        <useSimpleClassName>false</useSimpleClassName>
                    </throwableClassName>
                    <throwableRootCauseClassName>
                        <useSimpleClassName>false</useSimpleClassName>
                    </throwableRootCauseClassName>
                    <message/>
                    <callerData/>
                    <arguments/>
                    <stackTrace>
                        <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                            <maxDepthPerThrowable>30</maxDepthPerThrowable>
                            <maxLength>1024</maxLength>
                            <shortenedClassNameLength>20</shortenedClassNameLength>
                            <exclude>sun\.reflect\..*\.invoke.*</exclude>
                            <exclude>net\.sf\.cglib\.proxy\.MethodProxy\.invoke</exclude>
                            <rootCauseFirst>true</rootCauseFirst>
                            <inlineHash>true</inlineHash>
                        </throwableConverter>
                    </stackTrace>
                    <pattern>
                        <omitEmptyFields>true</omitEmptyFields>
                        <pattern>
                            {
                            "type":"service",
                            "pid":"#asLong{${PID}}",
                            "hostname":"${HOSTNAME}",
                            "requested_uri":"%mdc{req.requestURI}",
                            "query_string":"%mdc{req.queryString}",
                            "traceId":"%mdc{traceId}",
                            "spanId":"%mdc{spanId}",
                            "parentId":"%mdc{parentId}",
                            "method":"%mdc{req.method}"
                            }
                        </pattern>
                    </pattern>
                </providers>
            </encoder>
            <file>${LOG_FILE}.service.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <fileNamePattern>${LOG_FILE}.service.log.%d{yyyy-MM-dd_HH}.%i.gz</fileNamePattern>
                <cleanHistoryOnStart>false</cleanHistoryOnStart>
                <maxFileSize>1GB</maxFileSize>
                <totalSizeCap>0</totalSizeCap>
                <maxHistory>0</maxHistory>
            </rollingPolicy>
        </appender>
    </springProfile>

    <appender name="ASYNC" class="net.logstash.logback.appender.LoggingEventAsyncDisruptorAppender">
        <includeCallerData>true</includeCallerData>
        <springProfile name="LOGGING_CONSOLE">
            <appender-ref ref="CONSOLE"/>
        </springProfile>
        <springProfile name="LOGGING_CONSOLE_JSON">
            <appender-ref ref="CONSOLE_JSON"/>
        </springProfile>
        <springProfile name="LOGGING_FILE_JSON">
            <appender-ref ref="FILE_JSON"/>
        </springProfile>
    </appender>

    <root level="INFO">
        <appender-ref ref="ASYNC"/>
    </root>
</configuration>